// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkApi.Models;

#nullable disable

namespace ParkApi.Migrations
{
    [DbContext(typeof(ParkApiContext))]
    [Migration("20230409195648_AddModelControllerAuth")]
    partial class AddModelControllerAuth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkApi.Models.StatePark", b =>
                {
                    b.Property<int>("StateParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StateParkLocation")
                        .HasColumnType("longtext");

                    b.Property<string>("StateParkName")
                        .HasColumnType("longtext");

                    b.HasKey("StateParkId");

                    b.ToTable("StatePark");

                    b.HasData(
                        new
                        {
                            StateParkId = 1,
                            StateParkLocation = "State1",
                            StateParkName = "State Name1"
                        },
                        new
                        {
                            StateParkId = 2,
                            StateParkLocation = "State2",
                            StateParkName = "State Name2"
                        },
                        new
                        {
                            StateParkId = 3,
                            StateParkLocation = "State3",
                            StateParkName = "State Name3"
                        },
                        new
                        {
                            StateParkId = 4,
                            StateParkLocation = "State4",
                            StateParkName = "State Name4"
                        },
                        new
                        {
                            StateParkId = 5,
                            StateParkLocation = "State5",
                            StateParkName = "State Name5"
                        });
                });

            modelBuilder.Entity("ParkApi.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "admin1",
                            Name = "JoeMama",
                            Password = "password1"
                        });
                });

            modelBuilder.Entity("ParkApi.NationalPark", b =>
                {
                    b.Property<int>("NationalParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NationalParkLocation")
                        .HasColumnType("longtext");

                    b.Property<string>("NationalParkName")
                        .HasColumnType("longtext");

                    b.HasKey("NationalParkId");

                    b.ToTable("NationalPark");

                    b.HasData(
                        new
                        {
                            NationalParkId = 1,
                            NationalParkLocation = "National1",
                            NationalParkName = "National Name1"
                        },
                        new
                        {
                            NationalParkId = 2,
                            NationalParkLocation = "National2",
                            NationalParkName = "National Name2"
                        },
                        new
                        {
                            NationalParkId = 3,
                            NationalParkLocation = "National3",
                            NationalParkName = "National Name3"
                        },
                        new
                        {
                            NationalParkId = 4,
                            NationalParkLocation = "National4",
                            NationalParkName = "National Name4"
                        },
                        new
                        {
                            NationalParkId = 5,
                            NationalParkLocation = "National5",
                            NationalParkName = "National Name5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
